<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.erp.mapper.EmployeeMapper">

  <resultMap id="BaseResultMap"  type="com.cskaoyan.erp.bean.Employee">
    <id column="emp_id" jdbcType="VARCHAR" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="id_code" jdbcType="VARCHAR" property="idCode" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="join_date" jdbcType="DATE" property="joinDate" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="graduate_school" jdbcType="VARCHAR" property="graduateSchool" />
    <result column="education_form" jdbcType="VARCHAR" property="educationForm" />

    <association property="department" javaType="com.cskaoyan.erp.bean.Department">
      <id column="department_id" jdbcType="VARCHAR" property="departmentId" />
      <result column="department_name" jdbcType="VARCHAR" property="departmentName" />
      <result column="note" jdbcType="VARCHAR" property="note" />
    </association>

  </resultMap>
  <sql id="Base_Column_List">
    emp_id, emp_name, sex, id_code, birthday, join_date, status, education, degree, major,
    graduate_school, education_form, department_id
  </sql>
  <insert id="insert" parameterType="com.cskaoyan.erp.bean.Employee">
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        emp_id,
      </if>
      <if test="empName != null">
        emp_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="idCode != null">
        id_code,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="joinDate != null">
        join_date,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="graduateSchool != null">
        graduate_school,
      </if>
      <if test="educationForm != null">
        education_form,
      </if>
      <if test="department != null">
        department_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="empId != null">
        #{empId,jdbcType=VARCHAR},
      </if>
      <if test="empName != null">
        #{empName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="idCode != null">
        #{idCode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="joinDate != null">
        #{joinDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="graduateSchool != null">
        #{graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="educationForm != null">
        #{educationForm,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department.departmentId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cskaoyan.erp.bean.Employee">
    update employee
    <set>
      <if test="empName != null">
        emp_name = #{empName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="idCode != null">
        id_code = #{idCode,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="joinDate != null">
        join_date = #{joinDate,jdbcType=DATE},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="graduateSchool != null">
        graduate_school = #{graduateSchool,jdbcType=VARCHAR},
      </if>
      <if test="educationForm != null">
        education_form = #{educationForm,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=VARCHAR},
      </if>
    </set>
    where emp_id = #{empId,jdbcType=VARCHAR}
  </update>

  <select id="selectAllEmployee" resultMap="BaseResultMap">
    select <include refid="Base_Column_List"/> from employee;
  </select>

  <select id="count" resultType="_int">
    select count(*) from employee
    <where>
      <if test="employeeId != null and employeeId != ''">
        and employee_id like #{empId}
      </if>
      <if test="employeeName != null and employeeName != ''">
        and employee_name like "%"#{employeeName}"%"
      </if>
      <if test="employeeType != null and employeeType != ''">
        and employee_type like "%"#{employeeType}"%"
      </if>
    </where>
  </select>

  <select id="selectByPage"  resultMap="BaseResultMap">

    select
    e.emp_id, e.emp_name, e.sex, e.id_code, e.birthday, e.join_date, e.status, e.education,e.degree, e.major,e.graduate_school, e.education_form, e.department_id,
    d.department_id, d.department_name, d.note
    from employee e left join department d on e.department_id = d.department_id
    <where>
      <if test="employeeId != null and employeeId != ''">
        and e.employee_id like #{empId}
      </if>
      <if test="employeeName != null and employeeName != ''">
        and e.employee_name like "%"#{empName}"%"
      </if>
      <if test="department != null">
        and d.department_name like "%"#{department.departmentName}"%"
      </if>
    </where>
    limit #{limit} offset #{offset};
  </select>

  <select id="getEmp" resultType="string" parameterType="java.lang.String">
    select emp_name from employee where emp_id=#{id}
  </select>
</mapper>