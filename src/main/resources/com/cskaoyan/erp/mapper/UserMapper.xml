<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cskaoyan.erp.mapper.UserMapper">

  <resultMap id="BaseResultMap" type="com.cskaoyan.erp.bean.User">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="locked" jdbcType="CHAR" property="locked" />
    <result column="role_name" property="roleName"/>
    <result column="role_id" property="roleId"/>
  </resultMap>

  <sql id="Base_Column_List">
    id, username, password, locked
  </sql>

  <insert id="insert" parameterType="com.cskaoyan.erp.bean.User">
    insert into sys_user
    (id, username, password, locked)
    values(#{id}, #{username}, #{password}, #{locked});
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.cskaoyan.erp.bean.User">
    update sys_user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="locked != null">
        locked = #{locked,jdbcType=CHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select  su.id, su.username,su.password, su.locked,sr.role_name,sr.role_id
    from sys_user su left join sys_user_role sur on su.id = sur.sys_user_id
    left join sys_role sr on sur.sys_role_id = sr.role_id
    where su.id = #{id};
  </select>

  <select id="selectUserByUsername" resultMap="BaseResultMap">
    select  su.id, su.username,su.password, su.locked,sr.role_name,sr.role_id
    from sys_user su left join sys_user_role sur on su.id = sur.sys_user_id
    left join sys_role sr on sur.sys_role_id = sr.role_id
    where su.username = #{username};
  </select>

  <select id="selectRolesByUsername" resultType="string">
    select role_name from sys_user su left join sys_user_role sur on su.id = sur.sys_user_id
    left join sys_role sr on sur.sys_role_id = sr.role_id where su.username = #{username};
  </select>

  <!--<select id="selectPermissionsByUsername" resultType="string">
   select sp.percode from sys_user su left join sys_user_role sur on su.id = sur.sys_user_id
   left join sys_role_permission srp on srp.sys_role_id = sur.sys_role_id
   left join sys_permission sp on sp.id = srp.sys_permission_id
   where su.username = #{username};
  </select>-->

  <select id="selectPermissionStrByUsername" resultType="string">
    select srp.sys_permission_id from sys_user su left join sys_user_role sur on su.id = sur.sys_user_id
    left join sys_role_permission srp on srp.sys_role_id = sur.sys_role_id
    where su.username = #{username};
  </select>

  <select id="selectPermissionByPermId" resultType="string">
    select percode from sys_permission where id = #{permId};
  </select>

  <select id="count" resultType="_int">
    select  count(*)
    from sys_user su left join sys_user_role sur on su.id = sur.sys_user_id
    left join sys_role sr on sur.sys_role_id = sr.role_id
    <where>
      <if test="id != null and id != ''">
         and su.id like #{id}
      </if>
      <if test="username != null and username != ''">
         and su.username like "%"#{username}"%"
      </if>
      <if test="roleName != null and roleName != ''">
         and sr.role_name like "%"#{roleName}"%"
      </if>
    </where>
  </select>

  <select id="selectUserByPage" resultMap="BaseResultMap">
    select  su.id, su.username,su.password, su.locked,sr.role_name,sr.role_id
    from sys_user su left join sys_user_role sur on su.id = sur.sys_user_id
    left join sys_role sr on sur.sys_role_id = sr.role_id
    <where>
      <if test="id != null and id != ''">
        and su.id like #{id}
      </if>
      <if test="username != null and username != ''">
        and su.username like "%"#{username}"%"
      </if>
      <if test="roleName != null and roleName != ''">
        and sr.role_name like "%"#{roleName}"%"
      </if>
    </where>
     limit #{limit} offset #{offset};
  </select>

  <insert id="addUser">
    insert into sys_user (id,username,password,locked)
    values(#{id},#{username},#{password},#{locked});
  </insert>

  <insert id="addRole">
     insert into sys_user_role (id,sys_user_id,sys_role_id)
     values(replace(uuid(),'-',''),#{userId},#{roleId});
  </insert>

  <update id="updateUser">
     update sys_user set
     username = #{username},password = #{password},locked = #{locked}
     where id = #{id};
  </update>

  <update id="updateRole">
     update sys_user_role set
     sys_role_id = #{roleId}
     where sys_user_id = #{userId};
  </update>

  <delete id="deleteRole">
     delete from sys_user_role where sys_user_id = #{userId};
  </delete>
</mapper>